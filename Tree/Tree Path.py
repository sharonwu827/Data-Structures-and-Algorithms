# 一、自顶而下：
#
# 1、如果是找路径和等于给定target的路径的，那么可以不用新增一个临时变量curSum来判断当前路径和，
# 只需要用给定和target减去节点值，最终结束条件判断target==0即可
#
# 2、是否要回溯：二叉树的问题大部分是不需要回溯的，原因如下：
# 二叉树的递归部分：dfs(root->left),dfs(root->right)已经把可能的路径穷尽了,
# 因此到任意叶节点的路径只可能有一条，绝对不可能出现另外的路径也到这个满足条件的叶节点的;
#
# 而对比二维数组(例如迷宫问题)的DFS,for循环向四个方向查找每次只能朝向一个方向，并没有穷尽路径，
# 因此某一个满足条件的点可能是有多条路径到该点的
#
# 并且visited数组标记已经走过的路径是会受到另外路径是否访问的影响，这时候必须回溯
#
# 3、找到路径后是否要return:
# 取决于题目是否要求找到叶节点满足条件的路径,如果必须到叶节点,那么就要return;
# 但如果是到任意节点都可以，那么必不能return,因为这条路径下面还可能有更深的路径满足条件，还要在此基础上继续递归
#
# 4、是否要双重递归(即调用根节点的dfs函数后，继续调用根左右节点的pathsum函数)：看题目要不要求从根节点开始的，还是从任意节点开始




